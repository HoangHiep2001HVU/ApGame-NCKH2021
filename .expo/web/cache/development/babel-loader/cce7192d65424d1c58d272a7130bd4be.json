{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Answer = function (_React$Component) {\n  _inherits(Answer, _React$Component);\n\n  var _super = _createSuper(Answer);\n\n  function Answer(props) {\n    var _this;\n\n    _classCallCheck(this, Answer);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      question: [],\n      id: 0\n    };\n    return _this;\n  }\n\n  _createClass(Answer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var database = this.props.route.params.data;\n      var _id = this.props.route.params.id;\n      this.setState({\n        question: [],\n        id: _id\n      });\n      console.log(this.state.id);\n      axios.get('/' + database + \"?id=\" + this.state.id).then(function (res) {\n        _this2.setState({\n          question: res.data,\n          id: 0\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"check\",\n    value: function check(choice, answer) {\n      var navigation = this.props.navigation;\n\n      if (answer == choice) {\n        navigation.navigate('Notification', {\n          notification: true,\n          id: this.props.route.params.id,\n          data: this.props.route.params.data\n        });\n      } else {\n        navigation.navigate('Notification', {\n          notification: false,\n          id: this.props.route.params.id,\n          data: this.props.route.params.data\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var answer = this.state.question.map(function (q) {\n        return _jsx(ImageBackground, {\n          style: styles.container,\n          source: {\n            uri: q.image\n          },\n          children: _jsxs(View, {\n            style: styles.info,\n            children: [_jsx(Text, {\n              style: styles.name,\n              children: q.name\n            }), _jsxs(View, {\n              style: styles.answers,\n              children: [_jsxs(View, {\n                style: styles.answer,\n                children: [_jsx(TouchableOpacity, {\n                  style: styles.choice,\n                  onPress: function onPress() {\n                    return _this3.check(q.A, q.answer);\n                  },\n                  children: _jsxs(Text, {\n                    style: styles.txt,\n                    children: [\"A. \", q.A]\n                  })\n                }), _jsx(TouchableOpacity, {\n                  style: styles.choice,\n                  onPress: function onPress() {\n                    return _this3.check(q.B, q.answer);\n                  },\n                  children: _jsxs(Text, {\n                    style: styles.txt,\n                    children: [\"B. \", q.B]\n                  })\n                })]\n              }), _jsxs(View, {\n                style: styles.answer,\n                children: [_jsx(TouchableOpacity, {\n                  style: styles.choice,\n                  onPress: function onPress() {\n                    return _this3.check(q.C, q.answer);\n                  },\n                  children: _jsxs(Text, {\n                    style: styles.txt,\n                    children: [\"C. \", q.C]\n                  })\n                }), _jsx(TouchableOpacity, {\n                  style: styles.choice,\n                  onPress: function onPress() {\n                    return _this3.check(q.D, q.answer);\n                  },\n                  children: _jsxs(Text, {\n                    style: styles.txt,\n                    children: [\"D. \", q.D]\n                  })\n                })]\n              })]\n            })]\n          })\n        }, q.id);\n      });\n      return _jsx(_Fragment, {\n        children: answer\n      });\n    }\n  }]);\n\n  return Answer;\n}(React.Component);\n\nexport { Answer as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    flexDirection: \"column-reverse\"\n  },\n  info: {\n    padding: 8,\n    alignItems: \"center\",\n    marginBottom: 30\n  },\n  name: {\n    fontFamily: 'UVNBanhMi',\n    width: \"70%\",\n    fontSize: 24,\n    marginBottom: 8,\n    color: \"#ff6000\"\n  },\n  answers: {\n    width: \"70%\"\n  },\n  choice: {\n    backgroundColor: '#ffdf2b',\n    alignItems: 'center',\n    margin: 10,\n    paddingHorizontal: 30,\n    paddingVertical: 10,\n    borderRadius: 10\n  },\n  answer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  txt: {\n    fontSize: 24,\n    fontFamily: 'UVNBanhMi',\n    fontWeight: 'bold',\n    color: '#ff6000'\n  }\n});","map":{"version":3,"sources":["E:/hiep/NCKH2021/AppGame/screen/Answer.js"],"names":["React","axios","ScrollView","Answer","props","state","question","id","database","route","params","data","_id","setState","console","log","get","then","res","catch","error","choice","answer","navigation","navigate","notification","map","q","styles","container","uri","image","info","name","answers","check","A","txt","B","C","D","Component","StyleSheet","create","flex","width","flexDirection","padding","alignItems","marginBottom","fontFamily","fontSize","color","backgroundColor","margin","paddingHorizontal","paddingVertical","borderRadius","justifyContent","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {Text, View, ImageBackground, TouchableOpacity, StyleSheet, Alert} from \"react-native\";\r\n\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\n\r\nexport default class Answer extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n          question:[],\r\n          id: 0\r\n        }\r\n      }\r\n\r\n    componentDidMount(){\r\n        const database = this.props.route.params.data;\r\n        const _id = this.props.route.params.id;\r\n        this.setState({question:[], id: _id});\r\n        console.log(this.state.id);\r\n        axios.get('/' + database + \"?id=\" + this.state.id)\r\n          .then(res =>{\r\n            this.setState({\r\n              question: res.data,\r\n              id: 0\r\n            })\r\n          })\r\n          .catch(error=>{\r\n            console.error(error)\r\n          })\r\n      }\r\n    \r\n    check(choice, answer){\r\n        const { navigation } = this.props;\r\n        if(answer==choice){\r\n            navigation.navigate('Notification', {\r\n                notification: true,\r\n                id: this.props.route.params.id,\r\n                data: this.props.route.params.data,\r\n              });\r\n        }\r\n        else{\r\n            navigation.navigate('Notification', {\r\n                notification: false,\r\n                id: this.props.route.params.id,\r\n                data: this.props.route.params.data,\r\n              });\r\n        }\r\n    }\r\n    render(){\r\n        const answer = this.state.question.map(q =>(\r\n            <ImageBackground key={q.id} style={styles.container} source={{uri: q.image}}>\r\n                <View style={styles.info} >\r\n                    <Text style={styles.name}>{q.name}</Text>\r\n                    <View style={styles.answers}>\r\n                        <View style={styles.answer}>\r\n                            <TouchableOpacity style={styles.choice} onPress={()=>this.check(q.A, q.answer)}>\r\n                                <Text style={styles.txt}>A. {q.A}</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={styles.choice} onPress={()=>this.check(q.B, q.answer)}>\r\n                                <Text style={styles.txt}>B. {q.B}</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                        <View style={styles.answer}>\r\n                            <TouchableOpacity style={styles.choice} onPress={()=>this.check(q.C, q.answer)}>\r\n                                <Text style={styles.txt}>C. {q.C}</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={styles.choice} onPress={()=>this.check(q.D, q.answer)}>\r\n                                <Text style={styles.txt}>D. {q.D}</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </ImageBackground>\r\n        ));\r\n        return(\r\n            <>\r\n                {answer}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n        flexDirection: \"column-reverse\",\r\n    },\r\n    info: {\r\n        padding: 8,\r\n        alignItems: \"center\",\r\n        marginBottom: 30,\r\n    },\r\n    name: {\r\n        fontFamily: 'UVNBanhMi',\r\n        width: \"70%\",\r\n        fontSize: 24,\r\n        marginBottom: 8,\r\n        color: \"#ff6000\",\r\n    },\r\n    answers: {\r\n        width: \"70%\",\r\n    },\r\n    choice: {\r\n        backgroundColor: '#ffdf2b',\r\n        alignItems: 'center',\r\n        margin: 10,\r\n        paddingHorizontal: 30,\r\n        paddingVertical: 10,\r\n        borderRadius: 10,\r\n    },\r\n    answer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    txt: {\r\n        fontSize: 24,\r\n        fontFamily: 'UVNBanhMi',\r\n        fontWeight: 'bold',\r\n        color: '#ff6000',\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}