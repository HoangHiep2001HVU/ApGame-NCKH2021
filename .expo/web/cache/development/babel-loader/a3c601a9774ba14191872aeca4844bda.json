{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport axios from 'axios';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport Categories from \"./screen/Categories\";\nimport Category from \"./screen/Category\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { StatusBar } from 'expo-status-bar';\nimport Shop from \"./screen/Shop\";\nimport Setting from \"./screen/Setting\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport * as Font from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\naxios.defaults.baseURL = 'http://5639-14-247-166-204.ngrok.io';\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nexport var Home = function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fontsLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"loadFonts\",\n    value: function loadFonts() {\n      return _regeneratorRuntime.async(function loadFonts$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'Vanilla': require(\"./assets/fonts/Vanilla.ttf\"),\n                'AntsyPants': require(\"./assets/fonts/AntsyPants.ttf\"),\n                'UVNBanhMi': require(\"./assets/fonts/UVNBanhMi.ttf\")\n              }));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadFonts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: '#90cbd3'\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: '900',\n            fontSize: 30,\n            fontFamily: 'Vanilla'\n          }\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Categories\",\n          component: Categories,\n          options: {\n            title: 'Trang chá»§'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Category\",\n          component: Category,\n          options: function options(_ref) {\n            var route = _ref.route;\n            return {\n              title: route.params.categoryName\n            };\n          }\n        })]\n      });\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nvar App = function (_React$Component2) {\n  _inherits(App, _React$Component2);\n\n  var _super2 = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return _jsxs(_Fragment, {\n        children: [_jsx(NavigationContainer, {\n          children: _jsxs(Tab.Navigator, {\n            screenOptions: {\n              headerStyle: {\n                backgroundColor: '#90cbd3'\n              },\n              headerTintColor: '#fff',\n              headerTitleStyle: {\n                fontWeight: 'bold'\n              }\n            },\n            tabBarOptions: {\n              activeTintColor: 'blue',\n              inactiveTintColor: '#fff',\n              tabStyle: {\n                backgroundColor: '#90cbd3'\n              }\n            },\n            children: [_jsx(Tab.Screen, {\n              name: \"Home\",\n              component: Home,\n              options: {\n                headerShown: false,\n                tabBarIcon: function tabBarIcon(_ref2) {\n                  var color = _ref2.color,\n                      size = _ref2.size;\n                  return _jsx(MaterialCommunityIcons, {\n                    name: \"home\",\n                    color: color,\n                    size: size\n                  });\n                }\n              }\n            }), _jsx(Tab.Screen, {\n              name: \"Shop\",\n              component: Shop,\n              options: {\n                tabBarIcon: function tabBarIcon(_ref3) {\n                  var color = _ref3.color,\n                      size = _ref3.size;\n                  return _jsx(MaterialCommunityIcons, {\n                    name: \"storefront-outline\",\n                    color: color,\n                    size: size\n                  });\n                }\n              }\n            }), _jsx(Tab.Screen, {\n              name: \"Settings\",\n              component: Setting,\n              options: {\n                tabBarIcon: function tabBarIcon(_ref4) {\n                  var color = _ref4.color,\n                      size = _ref4.size;\n                  return _jsx(MaterialCommunityIcons, {\n                    name: \"format-line-weight\",\n                    color: color,\n                    size: size\n                  });\n                }\n              }\n            })]\n          })\n        }), _jsx(StatusBar, {\n          style: \"dark\"\n        })]\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'stretch',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["E:/hiep/NCKH2021/AppGame/App.js"],"names":["React","axios","NavigationContainer","Categories","Category","createStackNavigator","createBottomTabNavigator","StatusBar","Shop","Setting","MaterialCommunityIcons","Font","defaults","baseURL","Stack","Tab","Home","state","fontsLoaded","loadAsync","require","setState","loadFonts","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","fontSize","fontFamily","title","route","params","categoryName","Component","App","activeTintColor","inactiveTintColor","tabStyle","headerShown","tabBarIcon","color","size","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { StyleSheet, View, Image } from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport Categories from \"./screen/Categories\";\nimport Category from \"./screen/Category\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\nimport { StatusBar } from 'expo-status-bar';\nimport Shop from './screen/Shop';\nimport Setting from './screen/Setting';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport * as Font from 'expo-font';\n\naxios.defaults.baseURL='http://5639-14-247-166-204.ngrok.io';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nexport class Home extends React.Component{\n\n  state = {\n    fontsLoaded: false,\n  };\n\n  async loadFonts() {\n    await Font.loadAsync({\n      'Vanilla': require('./assets/fonts/Vanilla.ttf'),\n      'AntsyPants': require('./assets/fonts/AntsyPants.ttf'),\n      'UVNBanhMi': require('./assets/fonts/UVNBanhMi.ttf'),\n    });\n    this.setState({ fontsLoaded: true });\n  }\n\n  componentDidMount() {\n    this.loadFonts();\n  }\n\n  render(){\n    return (\n        <Stack.Navigator\n          screenOptions={{\n            headerStyle: {\n              backgroundColor: '#90cbd3',\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n              fontWeight: '900',\n              fontSize: 30,\n              fontFamily: 'Vanilla',\n            }\n          }}\n        >\n          <Stack.Screen \n            name=\"Categories\" \n            component={Categories} \n            options={{\n              title: 'Trang chá»§'\n            }}\n          />\n          <Stack.Screen \n            name=\"Category\" \n            component={Category} \n            options={({ route }) => ({\n            title: route.params.categoryName\n            })}\n          />\n        </Stack.Navigator>\n    );\n  }\n}\n\nexport default class App extends React.Component {\n  render(){\n    return (\n      <>\n      <NavigationContainer>\n        <Tab.Navigator\n          screenOptions={{\n            headerStyle: {\n              backgroundColor: '#90cbd3',\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n              fontWeight: 'bold',\n            }\n          }}\n          tabBarOptions={{\n            activeTintColor: 'blue',\n            inactiveTintColor: '#fff',\n            tabStyle: {\n              backgroundColor: '#90cbd3',\n            },\n          }}\n        >\n          <Tab.Screen name=\"Home\" component={Home} options={{ \n            headerShown: false, \n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"home\" color={color} size={size} />\n            ),\n          }}/>\n          <Tab.Screen name=\"Shop\" component={Shop} options={{ \n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"storefront-outline\" color={color} size={size} />\n            ),\n          }}/>\n          <Tab.Screen name=\"Settings\" component={Setting} options={{ \n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"format-line-weight\" color={color} size={size} />\n            ),\n          }}/>\n        </Tab.Navigator>\n      </NavigationContainer>\n      <StatusBar style='dark' />\n      </>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'stretch',\n    justifyContent: 'center',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}