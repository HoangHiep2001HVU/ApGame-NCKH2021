{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport axios from 'axios';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport QuestionsListItem from \"../components/QuestionsListItem\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar ListQuestion = function (_React$Component) {\n  _inherits(ListQuestion, _React$Component);\n\n  var _super = _createSuper(ListQuestion);\n\n  function ListQuestion(props) {\n    var _this;\n\n    _classCallCheck(this, ListQuestion);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      question: [],\n      database: \" \"\n    };\n    return _this;\n  }\n\n  _createClass(ListQuestion, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        database: this.props.route.params.database\n      });\n      console.log(this.state.database);\n      axios.get('/' + this.state.database).then(function (res) {\n        _this2.setState({\n          questions: res.data\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      var questions = this.state.questions;\n      return _jsx(_Fragment, {});\n    }\n  }]);\n\n  return ListQuestion;\n}(React.Component);\n\nexport { ListQuestion as default };\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 8,\n    paddingTop: 16\n  },\n  wrapper: {\n    flex: 1,\n    paddingHorizontal: 8,\n    paddingBottom: 16\n  }\n});","map":{"version":3,"sources":["E:/hiep/NCKH2021/AppGame/screen/ListQuestion.js"],"names":["React","axios","StatusBar","QuestionsListItem","ListQuestion","props","state","question","database","setState","route","params","console","log","get","then","res","questions","data","catch","error","navigation","Component","styles","StyleSheet","create","container","paddingHorizontal","paddingTop","wrapper","flex","paddingBottom"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;;AAEA,OAAOC,iBAAP;;;;IAEqBC,Y;;;;;AACnB,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAY;AACVC,MAAAA,QAAQ,EAAC,EADC;AAEVC,MAAAA,QAAQ,EAAE;AAFA,KAAZ;AAFgB;AAMjB;;;;WAED,6BAAmB;AAAA;;AAIjB,WAAKC,QAAL,CAAc;AAACD,QAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBH;AAAnC,OAAd;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWE,QAAvB;AACAP,MAAAA,KAAK,CAACa,GAAN,CAAU,MAAI,KAAKR,KAAL,CAAWE,QAAzB,EACGO,IADH,CACQ,UAAAC,GAAG,EAAG;AACV,QAAA,MAAI,CAACP,QAAL,CAAc;AACZQ,UAAAA,SAAS,EAAED,GAAG,CAACE;AADH,SAAd;AAGD,OALH,EAMGC,KANH,CAMS,UAAAC,KAAK,EAAE;AACZR,QAAAA,OAAO,CAACQ,KAAR,CAAcA,KAAd;AACD,OARH;AASD;;;WACD,kBAAQ;AACN,UAAQC,UAAR,GAAuB,KAAKhB,KAA5B,CAAQgB,UAAR;AACA,UAAOJ,SAAP,GAAoB,KAAKX,KAAzB,CAAOW,SAAP;AACA,aAAQ,mBAAR;AA0BD;;;;EAtDuCjB,KAAK,CAACsB,S;;SAA3BlB,Y;AAyDrB,IAAMmB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,iBAAiB,EAAE,CADV;AAETC,IAAAA,UAAU,EAAE;AAFH,GADoB;AAK/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPH,IAAAA,iBAAiB,EAAE,CAFZ;AAGPI,IAAAA,aAAa,EAAE;AAHR;AALsB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, FlatList } from 'react-native';\r\nimport QuestionsListItem from '../components/QuestionsListItem';\r\n\r\nexport default class ListQuestion extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state= {\r\n      question:[],\r\n      database: \" \",\r\n    }\r\n  }\r\n  \r\n  componentDidMount(){\r\n    // const id = this.props.route.params.categoryId;\r\n    // const a = '/products?category='+id;\r\n    // console.log(a);\r\n    this.setState({database: this.props.route.params.database});\r\n    console.log(this.state.database);\r\n    axios.get('/'+this.state.database)\r\n      .then(res =>{\r\n        this.setState({\r\n          questions: res.data\r\n        })\r\n      })\r\n      .catch(error=>{\r\n        console.error(error)\r\n      })\r\n  }\r\n  render(){\r\n    const { navigation } = this.props;\r\n    const {questions} = this.state;\r\n    return (<></>\r\n      // <FlatList \r\n      //   data={questions}\r\n      //   contentContainerStyle={styles.container}\r\n      //   numColumns={5}//số cột hiển thị mong muốn\r\n      //   renderItem={({item})=> \r\n      //     <View style={styles.wrapper}>\r\n      //       <QuestionsListItem \r\n      //         questions={item}\r\n      //         onPress={()=>navigation.navigate('Answer', {\r\n      //           id: item.id,\r\n      //           data: database,\r\n      //           // questionName: item.name,\r\n      //           // a: item.A,\r\n      //           // b: item.B,\r\n      //           // c: item.C,\r\n      //           // d: item.D,\r\n      //           // answer: item.answer,\r\n      //           // image: item.image,\r\n      //         })} \r\n      //       />\r\n      //     </View>\r\n      //   }\r\n      //   keyExtractor={(item) => item.id}\r\n      // />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingHorizontal: 8,\r\n    paddingTop: 16\r\n  },\r\n  wrapper: {\r\n    flex: 1,\r\n    paddingHorizontal: 8,\r\n    paddingBottom: 16\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}