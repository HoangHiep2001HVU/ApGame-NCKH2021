{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Answer = function (_React$Component) {\n  _inherits(Answer, _React$Component);\n\n  var _super = _createSuper(Answer);\n\n  function Answer() {\n    _classCallCheck(this, Answer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Answer, [{\n    key: \"check\",\n    value: function check(answer) {\n      var navigation = this.props.navigation;\n\n      if (answer == this.props.route.params.answer) {\n        navigation.navigate('Notification', {\n          notification: true\n        });\n      } else {\n        navigation.navigate('Notification', {\n          notification: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var answer = this.props.route.params;\n      return _jsx(ImageBackground, {\n        style: styles.container,\n        source: {\n          uri: answer.image\n        },\n        children: _jsxs(View, {\n          style: styles.info,\n          children: [_jsx(Text, {\n            style: styles.name,\n            children: answer.questionName\n          }), _jsxs(View, {\n            style: styles.answers,\n            children: [_jsxs(View, {\n              style: styles.answer,\n              children: [_jsx(TouchableOpacity, {\n                style: styles.choice,\n                onPress: function onPress() {\n                  return _this.check(answer.a);\n                },\n                children: _jsxs(Text, {\n                  style: styles.txt,\n                  children: [\"A. \", answer.a]\n                })\n              }), _jsx(TouchableOpacity, {\n                style: styles.choice,\n                onPress: function onPress() {\n                  return _this.check(answer.b);\n                },\n                children: _jsxs(Text, {\n                  style: styles.txt,\n                  children: [\"B. \", answer.b]\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.answer,\n              children: [_jsx(TouchableOpacity, {\n                style: styles.choice,\n                onPress: function onPress() {\n                  return _this.check(answer.c);\n                },\n                children: _jsxs(Text, {\n                  style: styles.txt,\n                  children: [\"C. \", answer.c]\n                })\n              }), _jsx(TouchableOpacity, {\n                style: styles.choice,\n                onPress: function onPress() {\n                  return _this.check(answer.d);\n                },\n                children: _jsxs(Text, {\n                  style: styles.txt,\n                  children: [\"D. \", answer.d]\n                })\n              })]\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Answer;\n}(React.Component);\n\nexport { Answer as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    flexDirection: \"column-reverse\"\n  },\n  info: {\n    padding: 8,\n    alignItems: \"center\",\n    marginBottom: 30\n  },\n  name: {\n    fontFamily: 'UVNBanhMi',\n    width: \"70%\",\n    fontSize: 24,\n    marginBottom: 8,\n    color: \"#ff6000\"\n  },\n  answers: {\n    width: \"70%\"\n  },\n  choice: {\n    backgroundColor: '#ffdf2b',\n    alignItems: 'center',\n    margin: 10,\n    paddingHorizontal: 30,\n    paddingVertical: 10,\n    borderRadius: 10\n  },\n  answer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  txt: {\n    fontSize: 24,\n    fontFamily: 'UVNBanhMi',\n    fontWeight: 'bold',\n    color: '#ff6000'\n  }\n});","map":{"version":3,"sources":["E:/hiep/NCKH2021/AppGame/screen/Answer.js"],"names":["React","axios","ScrollView","Answer","answer","navigation","props","route","params","navigate","notification","styles","container","uri","image","info","name","questionName","answers","choice","check","a","txt","b","c","d","Component","StyleSheet","create","flex","width","flexDirection","padding","alignItems","marginBottom","fontFamily","fontSize","color","backgroundColor","margin","paddingHorizontal","paddingVertical","borderRadius","justifyContent","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {Text, View, ImageBackground, TouchableOpacity, StyleSheet, Alert} from \"react-native\";\r\n\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\n\r\nexport default class Answer extends React.Component {\r\n    check(answer){\r\n        const { navigation } = this.props;\r\n        if(answer==this.props.route.params.answer){\r\n            navigation.navigate('Notification', {\r\n                notification: true,\r\n              });\r\n        }\r\n        else{\r\n            navigation.navigate('Notification', {\r\n                notification: false,\r\n              });\r\n        }\r\n    }\r\n    render(){\r\n        const answer = this.props.route.params;\r\n        // console.log(this.props.route);\r\n        return(\r\n            <ImageBackground style={styles.container} source={{uri: answer.image}}>\r\n                <View style={styles.info} >\r\n                    <Text style={styles.name}>{answer.questionName}</Text>\r\n                    <View style={styles.answers}>\r\n                        <View style={styles.answer}>\r\n                            <TouchableOpacity style={styles.choice} onPress={()=>this.check(answer.a)}>\r\n                                <Text style={styles.txt}>A. {answer.a}</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={styles.choice} onPress={()=>this.check(answer.b)}>\r\n                                <Text style={styles.txt}>B. {answer.b}</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                        <View style={styles.answer}>\r\n                            <TouchableOpacity style={styles.choice} onPress={()=>this.check(answer.c)}>\r\n                                <Text style={styles.txt}>C. {answer.c}</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={styles.choice} onPress={()=>this.check(answer.d)}>\r\n                                <Text style={styles.txt}>D. {answer.d}</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </ImageBackground>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n        flexDirection: \"column-reverse\",\r\n    },\r\n    info: {\r\n        padding: 8,\r\n        alignItems: \"center\",\r\n        marginBottom: 30,\r\n    },\r\n    name: {\r\n        fontFamily: 'UVNBanhMi',\r\n        width: \"70%\",\r\n        fontSize: 24,\r\n        marginBottom: 8,\r\n        color: \"#ff6000\",\r\n    },\r\n    answers: {\r\n        width: \"70%\",\r\n    },\r\n    choice: {\r\n        backgroundColor: '#ffdf2b',\r\n        alignItems: 'center',\r\n        margin: 10,\r\n        paddingHorizontal: 30,\r\n        paddingVertical: 10,\r\n        borderRadius: 10,\r\n    },\r\n    answer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    txt: {\r\n        fontSize: 24,\r\n        fontFamily: 'UVNBanhMi',\r\n        fontWeight: 'bold',\r\n        color: '#ff6000',\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}