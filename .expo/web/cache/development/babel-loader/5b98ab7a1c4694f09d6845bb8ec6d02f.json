{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Img from \"../assets/5291450.jpg\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Answer = function (_React$Component) {\n  _inherits(Answer, _React$Component);\n\n  var _super = _createSuper(Answer);\n\n  function Answer() {\n    _classCallCheck(this, Answer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Answer, [{\n    key: \"check\",\n    value: function check(answer) {\n      var navigation = this.props.navigation;\n\n      if (answer == this.props.route.params.answer) {\n        navigation.navigate('Answer', {\n          id: 1,\n          questionName: 'a',\n          a: 1,\n          b: 2,\n          c: 3,\n          d: 4,\n          answer: 3\n        });\n      } else {}\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var answer = this.props.route.params;\n      console.log(answer);\n      return _jsx(ScrollView, {\n        style: styles.shadow,\n        children: _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Image, {\n            style: styles.img,\n            source: Img\n          }), _jsxs(View, {\n            style: styles.info,\n            children: [_jsx(Text, {\n              style: styles.name,\n              children: answer.questionName\n            }), _jsxs(View, {\n              style: styles.answers,\n              children: [_jsxs(View, {\n                style: styles.answer,\n                children: [_jsx(TouchableOpacity, {\n                  style: styles.choice,\n                  onPress: function onPress() {\n                    return _this.check(answer.a);\n                  },\n                  children: _jsxs(Text, {\n                    style: styles.txt,\n                    children: [\"A. \", answer.a]\n                  })\n                }), _jsx(TouchableOpacity, {\n                  style: styles.choice,\n                  onPress: function onPress() {\n                    return _this.check(answer.b);\n                  },\n                  children: _jsxs(Text, {\n                    style: styles.txt,\n                    children: [\"B. \", answer.b]\n                  })\n                })]\n              }), _jsxs(View, {\n                style: styles.answer,\n                children: [_jsx(TouchableOpacity, {\n                  style: styles.choice,\n                  onPress: function onPress() {\n                    return _this.check(answer.c);\n                  },\n                  children: _jsxs(Text, {\n                    style: styles.txt,\n                    children: [\"C. \", answer.c]\n                  })\n                }), _jsx(TouchableOpacity, {\n                  style: styles.choice,\n                  onPress: function onPress() {\n                    return _this.check(answer.d);\n                  },\n                  children: _jsxs(Text, {\n                    style: styles.txt,\n                    children: [\"D. \", answer.d]\n                  })\n                })]\n              })]\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Answer;\n}(React.Component);\n\nexport { Answer as default };\nvar styles = StyleSheet.create({\n  shadow: {\n    flex: 1,\n    backgroundColor: '#fff',\n    shadowColor: '#000',\n    shadowOpacity: 0.1,\n    shadowRadius: 10,\n    shadowOffset: {\n      width: 0,\n      height: 0\n    }\n  },\n  container: {\n    marginBottom: 20,\n    borderRadius: 4,\n    backgroundColor: '#fff',\n    overflow: 'hidden'\n  },\n  info: {\n    padding: 8\n  },\n  name: {\n    fontSize: 16,\n    marginBottom: 8\n  },\n  answers: {\n    backgroundColor: '#90cbd3'\n  },\n  choice: {\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    margin: 10,\n    paddingHorizontal: 30,\n    paddingVertical: 10,\n    borderRadius: 10\n  },\n  answer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  txt: {\n    fontSize: 24,\n    fontFamily: 'UVNBanhMi',\n    fontWeight: 'bold',\n    color: '#90cbd3'\n  },\n  img: {\n    height: 420\n  },\n  true: {\n    position: 'absolute'\n  }\n});","map":{"version":3,"sources":["E:/hiep/NCKH2021/AppGame/screen/Answer.js"],"names":["React","axios","Img","ScrollView","Answer","answer","navigation","props","route","params","navigate","id","questionName","a","b","c","d","console","log","styles","shadow","container","img","info","name","answers","choice","check","txt","Component","StyleSheet","create","flex","backgroundColor","shadowColor","shadowOpacity","shadowRadius","shadowOffset","width","height","marginBottom","borderRadius","overflow","padding","fontSize","alignItems","margin","paddingHorizontal","paddingVertical","flexDirection","justifyContent","fontFamily","fontWeight","color","true","position"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {Text, View, Image, TouchableOpacity, StyleSheet, Alert} from \"react-native\";\r\n\r\nimport Img from '../assets/5291450.jpg';\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\n\r\nexport default class Answer extends React.Component {\r\n    check(answer){\r\n        const { navigation } = this.props;\r\n        if(answer==this.props.route.params.answer){\r\n            navigation.navigate('Answer', {\r\n                id: 1,\r\n                questionName: 'a',\r\n                a: 1,\r\n                b: 2,\r\n                c: 3,\r\n                d: 4,\r\n                answer: 3,\r\n              });\r\n        }\r\n        else{\r\n        }\r\n    }\r\n    render(){\r\n        const answer = this.props.route.params;\r\n        console.log(answer);\r\n        return(\r\n            <ScrollView style={styles.shadow}>\r\n                <View style={styles.container}>\r\n                    <Image style={styles.img} source={Img}/>\r\n                    <View style={styles.info}>\r\n                        <Text style={styles.name}>{answer.questionName}</Text>\r\n                        <View style={styles.answers}>\r\n                            <View style={styles.answer}>\r\n                                <TouchableOpacity style={styles.choice} onPress={()=>this.check(answer.a)}>\r\n                                    <Text style={styles.txt}>A. {answer.a}</Text>\r\n                                </TouchableOpacity>\r\n                                <TouchableOpacity style={styles.choice} onPress={()=>this.check(answer.b)}>\r\n                                    <Text style={styles.txt}>B. {answer.b}</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                            <View style={styles.answer}>\r\n                                <TouchableOpacity style={styles.choice} onPress={()=>this.check(answer.c)}>\r\n                                    <Text style={styles.txt}>C. {answer.c}</Text>\r\n                                </TouchableOpacity>\r\n                                <TouchableOpacity style={styles.choice} onPress={()=>this.check(answer.d)}>\r\n                                    <Text style={styles.txt}>D. {answer.d}</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    shadow: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        shadowColor: '#000',\r\n        shadowOpacity: 0.1,\r\n        shadowRadius: 10,\r\n        shadowOffset: {width: 0, height: 0},\r\n    },\r\n    container: {\r\n        marginBottom: 20,\r\n        borderRadius: 4,\r\n        backgroundColor: '#fff',\r\n        overflow: 'hidden'\r\n    },\r\n    info: {\r\n        padding: 8,\r\n    },\r\n    name: {\r\n        fontSize: 16,\r\n        marginBottom: 8\r\n    },\r\n    answers: {\r\n        backgroundColor: '#90cbd3',\r\n    },\r\n    choice: {\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        margin: 10,\r\n        paddingHorizontal: 30,\r\n        paddingVertical: 10,\r\n        borderRadius: 10,\r\n    },\r\n    answer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    txt: {\r\n        fontSize: 24,\r\n        fontFamily: 'UVNBanhMi',\r\n        fontWeight: 'bold',\r\n        color: '#90cbd3',\r\n    },\r\n    img: {\r\n        height: 420,\r\n    },\r\n    true: {\r\n        position: 'absolute',\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}