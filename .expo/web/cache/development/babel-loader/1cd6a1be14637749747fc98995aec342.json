{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nvar TrackPlayer = NativeModules.TrackPlayerModule;\nvar emitter = Platform.OS !== 'android' ? new NativeEventEmitter(TrackPlayer) : DeviceEventEmitter;\n\nfunction resolveAsset(uri) {\n  if (!uri) return undefined;\n  return resolveAssetSource(uri);\n}\n\nfunction resolveUrl(url) {\n  if (!url) return undefined;\n  return resolveAssetSource(url) || url;\n}\n\nfunction setupPlayer(options) {\n  return TrackPlayer.setupPlayer(options || {});\n}\n\nfunction updateOptions(data) {\n  data = _extends({}, data);\n  data.icon = resolveAsset(data.icon);\n  data.playIcon = resolveAsset(data.playIcon);\n  data.pauseIcon = resolveAsset(data.pauseIcon);\n  data.stopIcon = resolveAsset(data.stopIcon);\n  data.previousIcon = resolveAsset(data.previousIcon);\n  data.nextIcon = resolveAsset(data.nextIcon);\n  data.rewindIcon = resolveAsset(data.rewindIcon);\n  data.forwardIcon = resolveAsset(data.forwardIcon);\n  return TrackPlayer.updateOptions(data);\n}\n\nfunction add(tracks, insertBeforeId) {\n  if (!Array.isArray(tracks)) {\n    tracks = [tracks];\n  }\n\n  if (tracks.length < 1) return;\n\n  for (var i = 0; i < tracks.length; i++) {\n    tracks[i] = _extends({}, tracks[i]);\n    tracks[i].url = resolveUrl(tracks[i].url);\n    tracks[i].artwork = resolveUrl(tracks[i].artwork);\n    tracks[i].id = \"\" + tracks[i].id;\n  }\n\n  return TrackPlayer.add(tracks, insertBeforeId);\n}\n\nfunction remove(tracks) {\n  if (!Array.isArray(tracks)) {\n    tracks = [tracks];\n  }\n\n  return TrackPlayer.remove(tracks);\n}\n\nfunction registerPlaybackService(serviceFactory) {\n  if (Platform.OS === 'android') {\n    AppRegistry.registerHeadlessTask('TrackPlayer', serviceFactory);\n  } else {\n    setImmediate(serviceFactory());\n  }\n}\n\nfunction addEventListener(event, listener) {\n  return emitter.addListener(event, listener);\n}\n\nfunction warpEventResponse(handler, event, payload) {\n  var additionalKeys = payload || {};\n  handler(_objectSpread({\n    type: event\n  }, additionalKeys));\n}\n\nfunction registerEventHandler(handler) {\n  var events = ['playback-state', 'playback-error', 'playback-queue-ended', 'playback-track-changed', 'remote-play', 'remote-pause', 'remote-stop', 'remote-next', 'remote-previous', 'remote-jump-forward', 'remote-jump-backward', 'remote-seek', 'remote-duck'];\n\n  if (Platform.OS === 'android') {\n    events.push('remote-skip', 'remote-set-rating', 'remote-play-id', 'remote-play-search');\n  }\n\n  registerPlaybackService(function () {\n    return function _callee() {\n      var i;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              for (i = 0; i < events.length; i++) {\n                addEventListener(events[i], warpEventResponse.bind(null, handler, events[i]));\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n  });\n}\n\nmodule.exports.STATE_NONE = TrackPlayer.STATE_NONE;\nmodule.exports.STATE_READY = TrackPlayer.STATE_READY;\nmodule.exports.STATE_PLAYING = TrackPlayer.STATE_PLAYING;\nmodule.exports.STATE_PAUSED = TrackPlayer.STATE_PAUSED;\nmodule.exports.STATE_STOPPED = TrackPlayer.STATE_STOPPED;\nmodule.exports.STATE_BUFFERING = TrackPlayer.STATE_BUFFERING;\nmodule.exports.STATE_CONNECTING = TrackPlayer.STATE_CONNECTING;\nmodule.exports.CAPABILITY_PLAY = TrackPlayer.CAPABILITY_PLAY;\nmodule.exports.CAPABILITY_PLAY_FROM_ID = TrackPlayer.CAPABILITY_PLAY_FROM_ID;\nmodule.exports.CAPABILITY_PLAY_FROM_SEARCH = TrackPlayer.CAPABILITY_PLAY_FROM_SEARCH;\nmodule.exports.CAPABILITY_PAUSE = TrackPlayer.CAPABILITY_PAUSE;\nmodule.exports.CAPABILITY_STOP = TrackPlayer.CAPABILITY_STOP;\nmodule.exports.CAPABILITY_SEEK_TO = TrackPlayer.CAPABILITY_SEEK_TO;\nmodule.exports.CAPABILITY_SKIP = TrackPlayer.CAPABILITY_SKIP;\nmodule.exports.CAPABILITY_SKIP_TO_NEXT = TrackPlayer.CAPABILITY_SKIP_TO_NEXT;\nmodule.exports.CAPABILITY_SKIP_TO_PREVIOUS = TrackPlayer.CAPABILITY_SKIP_TO_PREVIOUS;\nmodule.exports.CAPABILITY_JUMP_FORWARD = TrackPlayer.CAPABILITY_JUMP_FORWARD;\nmodule.exports.CAPABILITY_JUMP_BACKWARD = TrackPlayer.CAPABILITY_JUMP_BACKWARD;\nmodule.exports.CAPABILITY_SET_RATING = TrackPlayer.CAPABILITY_SET_RATING;\nmodule.exports.CAPABILITY_LIKE = TrackPlayer.CAPABILITY_LIKE;\nmodule.exports.CAPABILITY_DISLIKE = TrackPlayer.CAPABILITY_DISLIKE;\nmodule.exports.CAPABILITY_BOOKMARK = TrackPlayer.CAPABILITY_BOOKMARK;\nmodule.exports.PITCH_ALGORITHM_LINEAR = TrackPlayer.PITCH_ALGORITHM_LINEAR;\nmodule.exports.PITCH_ALGORITHM_MUSIC = TrackPlayer.PITCH_ALGORITHM_MUSIC;\nmodule.exports.PITCH_ALGORITHM_VOICE = TrackPlayer.PITCH_ALGORITHM_VOICE;\nmodule.exports.RATING_HEART = TrackPlayer.RATING_HEART;\nmodule.exports.RATING_THUMBS_UP_DOWN = TrackPlayer.RATING_THUMBS_UP_DOWN;\nmodule.exports.RATING_3_STARS = TrackPlayer.RATING_3_STARS;\nmodule.exports.RATING_4_STARS = TrackPlayer.RATING_4_STARS;\nmodule.exports.RATING_5_STARS = TrackPlayer.RATING_5_STARS;\nmodule.exports.RATING_PERCENTAGE = TrackPlayer.RATING_PERCENTAGE;\nmodule.exports.setupPlayer = setupPlayer;\nmodule.exports.destroy = TrackPlayer.destroy;\nmodule.exports.updateOptions = updateOptions;\nmodule.exports.registerEventHandler = registerEventHandler;\nmodule.exports.registerBackendService = registerPlaybackService;\nmodule.exports.registerPlaybackService = registerPlaybackService;\nmodule.exports.addEventListener = addEventListener;\nmodule.exports.add = add;\nmodule.exports.remove = remove;\nmodule.exports.skip = TrackPlayer.skip;\nmodule.exports.getQueue = TrackPlayer.getQueue;\nmodule.exports.skipToNext = TrackPlayer.skipToNext;\nmodule.exports.skipToPrevious = TrackPlayer.skipToPrevious;\nmodule.exports.updateMetadataForTrack = TrackPlayer.updateMetadataForTrack;\nmodule.exports.removeUpcomingTracks = TrackPlayer.removeUpcomingTracks;\nmodule.exports.reset = TrackPlayer.reset;\nmodule.exports.play = TrackPlayer.play;\nmodule.exports.pause = TrackPlayer.pause;\nmodule.exports.stop = TrackPlayer.stop;\nmodule.exports.seekTo = TrackPlayer.seekTo;\nmodule.exports.setVolume = TrackPlayer.setVolume;\nmodule.exports.setRate = TrackPlayer.setRate;\nmodule.exports.getTrack = TrackPlayer.getTrack;\nmodule.exports.getCurrentTrack = TrackPlayer.getCurrentTrack;\nmodule.exports.getVolume = TrackPlayer.getVolume;\nmodule.exports.getDuration = TrackPlayer.getDuration;\nmodule.exports.getPosition = TrackPlayer.getPosition;\nmodule.exports.getBufferedPosition = TrackPlayer.getBufferedPosition;\nmodule.exports.getState = TrackPlayer.getState;\nmodule.exports.getRate = TrackPlayer.getRate;\nmodule.exports.TrackPlayerEvents = require(\"./eventTypes\");\nmodule.exports.ProgressComponent = require(\"./ProgressComponent\");\nmodule.exports.useTrackPlayerEvents = require(\"./hooks\").useTrackPlayerEvents;\nmodule.exports.useTrackPlayerProgress = require(\"./hooks\").useTrackPlayerProgress;\nmodule.exports.usePlaybackState = require(\"./hooks\").usePlaybackState;","map":{"version":3,"sources":["E:/hiep/NCKH2021/AppGame/node_modules/react-native-track-player/lib/index.js"],"names":["resolveAssetSource","TrackPlayer","NativeModules","TrackPlayerModule","emitter","Platform","OS","NativeEventEmitter","DeviceEventEmitter","resolveAsset","uri","undefined","resolveUrl","url","setupPlayer","options","updateOptions","data","icon","playIcon","pauseIcon","stopIcon","previousIcon","nextIcon","rewindIcon","forwardIcon","add","tracks","insertBeforeId","Array","isArray","length","i","artwork","id","remove","registerPlaybackService","serviceFactory","AppRegistry","registerHeadlessTask","setImmediate","addEventListener","event","listener","addListener","warpEventResponse","handler","payload","additionalKeys","type","registerEventHandler","events","push","bind","module","exports","STATE_NONE","STATE_READY","STATE_PLAYING","STATE_PAUSED","STATE_STOPPED","STATE_BUFFERING","STATE_CONNECTING","CAPABILITY_PLAY","CAPABILITY_PLAY_FROM_ID","CAPABILITY_PLAY_FROM_SEARCH","CAPABILITY_PAUSE","CAPABILITY_STOP","CAPABILITY_SEEK_TO","CAPABILITY_SKIP","CAPABILITY_SKIP_TO_NEXT","CAPABILITY_SKIP_TO_PREVIOUS","CAPABILITY_JUMP_FORWARD","CAPABILITY_JUMP_BACKWARD","CAPABILITY_SET_RATING","CAPABILITY_LIKE","CAPABILITY_DISLIKE","CAPABILITY_BOOKMARK","PITCH_ALGORITHM_LINEAR","PITCH_ALGORITHM_MUSIC","PITCH_ALGORITHM_VOICE","RATING_HEART","RATING_THUMBS_UP_DOWN","RATING_3_STARS","RATING_4_STARS","RATING_5_STARS","RATING_PERCENTAGE","destroy","registerBackendService","skip","getQueue","skipToNext","skipToPrevious","updateMetadataForTrack","removeUpcomingTracks","reset","play","pause","stop","seekTo","setVolume","setRate","getTrack","getCurrentTrack","getVolume","getDuration","getPosition","getBufferedPosition","getState","getRate","TrackPlayerEvents","require","ProgressComponent","useTrackPlayerEvents","useTrackPlayerProgress","usePlaybackState"],"mappings":"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","sourcesContent":["import { Platform, AppRegistry, DeviceEventEmitter, NativeEventEmitter, NativeModules } from 'react-native';\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\n\nconst { TrackPlayerModule: TrackPlayer } = NativeModules;\nconst emitter = Platform.OS !== 'android' ? new NativeEventEmitter(TrackPlayer) : DeviceEventEmitter;\n\nfunction resolveAsset(uri) {\n    if(!uri) return undefined;\n    return resolveAssetSource(uri);\n}\n\nfunction resolveUrl(url) {\n    if(!url) return undefined;\n    return resolveAssetSource(url) || url;\n}\n\nfunction setupPlayer(options) {\n    return TrackPlayer.setupPlayer(options || {});\n}\n\nfunction updateOptions(data) {\n    // Clone the object before modifying it, so we don't run into problems with immutable objects\n    data = Object.assign({}, data);\n\n    // Resolve the asset for each icon\n    data.icon = resolveAsset(data.icon);\n    data.playIcon = resolveAsset(data.playIcon);\n    data.pauseIcon = resolveAsset(data.pauseIcon);\n    data.stopIcon = resolveAsset(data.stopIcon);\n    data.previousIcon = resolveAsset(data.previousIcon);\n    data.nextIcon = resolveAsset(data.nextIcon);\n    data.rewindIcon = resolveAsset(data.rewindIcon);\n    data.forwardIcon = resolveAsset(data.forwardIcon);\n\n    return TrackPlayer.updateOptions(data);\n}\n\nfunction add(tracks, insertBeforeId) {\n    if(!Array.isArray(tracks)) {\n        tracks = [tracks];\n    }\n\n    if(tracks.length < 1) return;\n\n    for(let i = 0; i < tracks.length; i++) {\n        // Clone the object before modifying it\n        tracks[i] = Object.assign({}, tracks[i]);\n\n        // Resolve the URLs\n        tracks[i].url = resolveUrl(tracks[i].url);\n        tracks[i].artwork = resolveUrl(tracks[i].artwork);\n\n        // Cast ID's into strings\n        tracks[i].id = `${tracks[i].id}`\n    }\n\n    return TrackPlayer.add(tracks, insertBeforeId);\n}\n\nfunction remove(tracks) {\n    if(!Array.isArray(tracks)) {\n        tracks = [tracks];\n    }\n\n    return TrackPlayer.remove(tracks);\n}\n\nfunction registerPlaybackService(serviceFactory) {\n    if (Platform.OS === 'android') {\n        // Registers the headless task\n        AppRegistry.registerHeadlessTask('TrackPlayer', serviceFactory);\n    } else {\n        // Initializes and runs the service in the next tick\n        setImmediate(serviceFactory());\n    }\n}\n\nfunction addEventListener(event, listener) {\n    return emitter.addListener(event, listener);\n}\n\nfunction warpEventResponse(handler, event, payload) {\n    // transform into the old format and return to handler\n    const additionalKeys = payload || {};\n    handler({ type: event, ...additionalKeys });\n}\n\n/**\n * @deprecated since version 1.0.1. Use addEventListener instead.\n */\nfunction registerEventHandler(handler) {\n    let events = [\n        'playback-state',\n        'playback-error',\n        'playback-queue-ended',\n        'playback-track-changed',\n\n        'remote-play',\n        'remote-pause',\n        'remote-stop',\n        'remote-next',\n        'remote-previous',\n        'remote-jump-forward',\n        'remote-jump-backward',\n        'remote-seek',\n        'remote-duck',\n    ];\n  \n    if (Platform.OS === 'android') {\n        events.push('remote-skip', 'remote-set-rating', 'remote-play-id', 'remote-play-search');\n    }\n\n    registerPlaybackService(() => {\n        return async function() {\n            for (let i = 0; i < events.length; i++) {\n                addEventListener(events[i], warpEventResponse.bind(null, handler, events[i]));\n            }\n        };\n    });\n}\n\n// We'll declare each one of the constants and functions manually so IDEs can show a list of them\n// We should also add documentation here, but I'll leave this task to another day\n\n// States\nmodule.exports.STATE_NONE = TrackPlayer.STATE_NONE;\nmodule.exports.STATE_READY = TrackPlayer.STATE_READY;\nmodule.exports.STATE_PLAYING = TrackPlayer.STATE_PLAYING;\nmodule.exports.STATE_PAUSED = TrackPlayer.STATE_PAUSED;\nmodule.exports.STATE_STOPPED = TrackPlayer.STATE_STOPPED;\nmodule.exports.STATE_BUFFERING = TrackPlayer.STATE_BUFFERING;\nmodule.exports.STATE_CONNECTING = TrackPlayer.STATE_CONNECTING;\n\n// Capabilities\nmodule.exports.CAPABILITY_PLAY = TrackPlayer.CAPABILITY_PLAY;\nmodule.exports.CAPABILITY_PLAY_FROM_ID = TrackPlayer.CAPABILITY_PLAY_FROM_ID;\nmodule.exports.CAPABILITY_PLAY_FROM_SEARCH = TrackPlayer.CAPABILITY_PLAY_FROM_SEARCH;\nmodule.exports.CAPABILITY_PAUSE = TrackPlayer.CAPABILITY_PAUSE;\nmodule.exports.CAPABILITY_STOP = TrackPlayer.CAPABILITY_STOP;\nmodule.exports.CAPABILITY_SEEK_TO = TrackPlayer.CAPABILITY_SEEK_TO;\nmodule.exports.CAPABILITY_SKIP = TrackPlayer.CAPABILITY_SKIP;\nmodule.exports.CAPABILITY_SKIP_TO_NEXT = TrackPlayer.CAPABILITY_SKIP_TO_NEXT;\nmodule.exports.CAPABILITY_SKIP_TO_PREVIOUS = TrackPlayer.CAPABILITY_SKIP_TO_PREVIOUS;\nmodule.exports.CAPABILITY_JUMP_FORWARD = TrackPlayer.CAPABILITY_JUMP_FORWARD;\nmodule.exports.CAPABILITY_JUMP_BACKWARD = TrackPlayer.CAPABILITY_JUMP_BACKWARD;\nmodule.exports.CAPABILITY_SET_RATING = TrackPlayer.CAPABILITY_SET_RATING;\nmodule.exports.CAPABILITY_LIKE = TrackPlayer.CAPABILITY_LIKE;\nmodule.exports.CAPABILITY_DISLIKE = TrackPlayer.CAPABILITY_DISLIKE;\nmodule.exports.CAPABILITY_BOOKMARK = TrackPlayer.CAPABILITY_BOOKMARK;\n\n// Pitch algorithms\nmodule.exports.PITCH_ALGORITHM_LINEAR = TrackPlayer.PITCH_ALGORITHM_LINEAR;\nmodule.exports.PITCH_ALGORITHM_MUSIC = TrackPlayer.PITCH_ALGORITHM_MUSIC;\nmodule.exports.PITCH_ALGORITHM_VOICE = TrackPlayer.PITCH_ALGORITHM_VOICE;\n\n// Rating Types\nmodule.exports.RATING_HEART = TrackPlayer.RATING_HEART;\nmodule.exports.RATING_THUMBS_UP_DOWN = TrackPlayer.RATING_THUMBS_UP_DOWN;\nmodule.exports.RATING_3_STARS = TrackPlayer.RATING_3_STARS;\nmodule.exports.RATING_4_STARS = TrackPlayer.RATING_4_STARS;\nmodule.exports.RATING_5_STARS = TrackPlayer.RATING_5_STARS;\nmodule.exports.RATING_PERCENTAGE = TrackPlayer.RATING_PERCENTAGE;\n\n// General\nmodule.exports.setupPlayer = setupPlayer;\nmodule.exports.destroy = TrackPlayer.destroy;\nmodule.exports.updateOptions = updateOptions;\nmodule.exports.registerEventHandler = registerEventHandler;\nmodule.exports.registerBackendService = registerPlaybackService;\nmodule.exports.registerPlaybackService = registerPlaybackService;\nmodule.exports.addEventListener = addEventListener;\n\n// Player Queue Commands\nmodule.exports.add = add;\nmodule.exports.remove = remove;\nmodule.exports.skip = TrackPlayer.skip;\nmodule.exports.getQueue = TrackPlayer.getQueue;\nmodule.exports.skipToNext = TrackPlayer.skipToNext;\nmodule.exports.skipToPrevious = TrackPlayer.skipToPrevious;\nmodule.exports.updateMetadataForTrack = TrackPlayer.updateMetadataForTrack;\nmodule.exports.removeUpcomingTracks = TrackPlayer.removeUpcomingTracks;\n\n// Player Playback Commands\nmodule.exports.reset = TrackPlayer.reset;\nmodule.exports.play = TrackPlayer.play;\nmodule.exports.pause = TrackPlayer.pause;\nmodule.exports.stop = TrackPlayer.stop;\nmodule.exports.seekTo = TrackPlayer.seekTo;\nmodule.exports.setVolume = TrackPlayer.setVolume;\nmodule.exports.setRate = TrackPlayer.setRate;\n\n// Player Getters\nmodule.exports.getTrack = TrackPlayer.getTrack;\nmodule.exports.getCurrentTrack = TrackPlayer.getCurrentTrack;\nmodule.exports.getVolume = TrackPlayer.getVolume;\nmodule.exports.getDuration = TrackPlayer.getDuration;\nmodule.exports.getPosition = TrackPlayer.getPosition;\nmodule.exports.getBufferedPosition = TrackPlayer.getBufferedPosition;\nmodule.exports.getState = TrackPlayer.getState;\nmodule.exports.getRate = TrackPlayer.getRate;\n\n// Player Event Types\nmodule.exports.TrackPlayerEvents = require('./eventTypes');\n\n// Components\nmodule.exports.ProgressComponent = require('./ProgressComponent');\n\n// React Hooks (Requires React v16.8+ and React Native v0.59+)\nmodule.exports.useTrackPlayerEvents = require('./hooks').useTrackPlayerEvents;\nmodule.exports.useTrackPlayerProgress = require('./hooks').useTrackPlayerProgress;\nmodule.exports.usePlaybackState = require('./hooks').usePlaybackState;\n"]},"metadata":{},"sourceType":"module"}