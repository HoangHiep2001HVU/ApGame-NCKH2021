{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Answer = function (_React$Component) {\n  _inherits(Answer, _React$Component);\n\n  var _super = _createSuper(Answer);\n\n  function Answer(props) {\n    var _this;\n\n    _classCallCheck(this, Answer);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      question: []\n    };\n    return _this;\n  }\n\n  _createClass(Answer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var database = this.props.route.params.data;\n      var id = this.props.route.params.id;\n      axios.get('http://8be3-113-175-74-249.ngrok.io/math?id=1').then(function (res) {\n        _this2.setState({\n          question: res.data\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"check\",\n    value: function check(answer) {\n      var navigation = this.props.navigation;\n\n      if (answer == this.props.route.params.answer) {\n        navigation.navigate('Notification', {\n          notification: true\n        });\n      } else {\n        navigation.navigate('Notification', {\n          notification: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var answer = this.state;\n      console.log(answer);\n      return _jsx(FlatList, {\n        data: answer,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(ImageBackground, {\n            style: styles.container,\n            source: {\n              uri: item.image\n            },\n            children: _jsxs(View, {\n              style: styles.info,\n              children: [_jsx(Text, {\n                style: styles.name,\n                children: item.questionName\n              }), _jsxs(View, {\n                style: styles.answers,\n                children: [_jsxs(View, {\n                  style: styles.answer,\n                  children: [_jsx(TouchableOpacity, {\n                    style: styles.choice,\n                    onPress: function onPress() {\n                      return _this3.check(answer.a);\n                    },\n                    children: _jsxs(Text, {\n                      style: styles.txt,\n                      children: [\"A. \", item.a]\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: styles.choice,\n                    onPress: function onPress() {\n                      return _this3.check(answer.b);\n                    },\n                    children: _jsxs(Text, {\n                      style: styles.txt,\n                      children: [\"B. \", item.b]\n                    })\n                  })]\n                }), _jsxs(View, {\n                  style: styles.answer,\n                  children: [_jsx(TouchableOpacity, {\n                    style: styles.choice,\n                    onPress: function onPress() {\n                      return _this3.check(answer.c);\n                    },\n                    children: _jsxs(Text, {\n                      style: styles.txt,\n                      children: [\"C. \", item.c]\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: styles.choice,\n                    onPress: function onPress() {\n                      return _this3.check(answer.d);\n                    },\n                    children: _jsxs(Text, {\n                      style: styles.txt,\n                      children: [\"D. \", item.d]\n                    })\n                  })]\n                })]\n              })]\n            })\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      });\n    }\n  }]);\n\n  return Answer;\n}(React.Component);\n\nexport { Answer as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    flexDirection: \"column-reverse\"\n  },\n  info: {\n    padding: 8,\n    alignItems: \"center\",\n    marginBottom: 30\n  },\n  name: {\n    fontFamily: 'UVNBanhMi',\n    width: \"70%\",\n    fontSize: 24,\n    marginBottom: 8,\n    color: \"#ff6000\"\n  },\n  answers: {\n    width: \"70%\"\n  },\n  choice: {\n    backgroundColor: '#ffdf2b',\n    alignItems: 'center',\n    margin: 10,\n    paddingHorizontal: 30,\n    paddingVertical: 10,\n    borderRadius: 10\n  },\n  answer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  txt: {\n    fontSize: 24,\n    fontFamily: 'UVNBanhMi',\n    fontWeight: 'bold',\n    color: '#ff6000'\n  }\n});","map":{"version":3,"sources":["E:/hiep/NCKH2021/AppGame/screen/Answer.js"],"names":["React","axios","ScrollView","Answer","props","state","question","database","route","params","data","id","get","then","res","setState","catch","error","console","answer","navigation","navigate","notification","log","item","styles","container","uri","image","info","name","questionName","answers","choice","check","a","txt","b","c","d","Component","StyleSheet","create","flex","width","flexDirection","padding","alignItems","marginBottom","fontFamily","fontSize","color","backgroundColor","margin","paddingHorizontal","paddingVertical","borderRadius","justifyContent","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {Text, View, ImageBackground, TouchableOpacity, StyleSheet, Alert} from \"react-native\";\r\n\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\n\r\nexport default class Answer extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n          question:[]\r\n        }\r\n      }\r\n\r\n    componentDidMount(){\r\n        const database = this.props.route.params.data;\r\n        const id = this.props.route.params.id;\r\n        axios.get('http://8be3-113-175-74-249.ngrok.io/math?id=1')\r\n          .then(res =>{\r\n            this.setState({\r\n              question: res.data\r\n            })\r\n          })\r\n          .catch(error=>{\r\n            console.error(error)\r\n          })\r\n      }\r\n    \r\n    check(answer){\r\n        const { navigation } = this.props;\r\n        if(answer==this.props.route.params.answer){\r\n            navigation.navigate('Notification', {\r\n                notification: true,\r\n              });\r\n        }\r\n        else{\r\n            navigation.navigate('Notification', {\r\n                notification: false,\r\n              });\r\n        }\r\n    }\r\n    render(){\r\n        const answer = this.state;\r\n        console.log(answer);\r\n        return(\r\n            <FlatList \r\n                data={answer}\r\n                renderItem={({item})=> \r\n                    <ImageBackground style={styles.container} source={{uri: item.image}}>\r\n                    <View style={styles.info} >\r\n                        <Text style={styles.name}>{item.questionName}</Text>\r\n                        <View style={styles.answers}>\r\n                            <View style={styles.answer}>\r\n                                <TouchableOpacity style={styles.choice} onPress={()=>this.check(answer.a)}>\r\n                                    <Text style={styles.txt}>A. {item.a}</Text>\r\n                                </TouchableOpacity>\r\n                                <TouchableOpacity style={styles.choice} onPress={()=>this.check(answer.b)}>\r\n                                    <Text style={styles.txt}>B. {item.b}</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                            <View style={styles.answer}>\r\n                                <TouchableOpacity style={styles.choice} onPress={()=>this.check(answer.c)}>\r\n                                    <Text style={styles.txt}>C. {item.c}</Text>\r\n                                </TouchableOpacity>\r\n                                <TouchableOpacity style={styles.choice} onPress={()=>this.check(answer.d)}>\r\n                                    <Text style={styles.txt}>D. {item.d}</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </ImageBackground>\r\n                }\r\n                keyExtractor={(item) => item.id}\r\n            />\r\n            // <ImageBackground style={styles.container} source={{uri: answer.image}}>\r\n            //     <View style={styles.info} >\r\n            //         <Text style={styles.name}>{answer.questionName}</Text>\r\n            //         <View style={styles.answers}>\r\n            //             <View style={styles.answer}>\r\n            //                 <TouchableOpacity style={styles.choice} onPress={()=>this.check(answer.a)}>\r\n            //                     <Text style={styles.txt}>A. {answer.a}</Text>\r\n            //                 </TouchableOpacity>\r\n            //                 <TouchableOpacity style={styles.choice} onPress={()=>this.check(answer.b)}>\r\n            //                     <Text style={styles.txt}>B. {answer.b}</Text>\r\n            //                 </TouchableOpacity>\r\n            //             </View>\r\n            //             <View style={styles.answer}>\r\n            //                 <TouchableOpacity style={styles.choice} onPress={()=>this.check(answer.c)}>\r\n            //                     <Text style={styles.txt}>C. {answer.c}</Text>\r\n            //                 </TouchableOpacity>\r\n            //                 <TouchableOpacity style={styles.choice} onPress={()=>this.check(answer.d)}>\r\n            //                     <Text style={styles.txt}>D. {answer.d}</Text>\r\n            //                 </TouchableOpacity>\r\n            //             </View>\r\n            //         </View>\r\n            //     </View>\r\n            // </ImageBackground>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n        flexDirection: \"column-reverse\",\r\n    },\r\n    info: {\r\n        padding: 8,\r\n        alignItems: \"center\",\r\n        marginBottom: 30,\r\n    },\r\n    name: {\r\n        fontFamily: 'UVNBanhMi',\r\n        width: \"70%\",\r\n        fontSize: 24,\r\n        marginBottom: 8,\r\n        color: \"#ff6000\",\r\n    },\r\n    answers: {\r\n        width: \"70%\",\r\n    },\r\n    choice: {\r\n        backgroundColor: '#ffdf2b',\r\n        alignItems: 'center',\r\n        margin: 10,\r\n        paddingHorizontal: 30,\r\n        paddingVertical: 10,\r\n        borderRadius: 10,\r\n    },\r\n    answer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    txt: {\r\n        fontSize: 24,\r\n        fontFamily: 'UVNBanhMi',\r\n        fontWeight: 'bold',\r\n        color: '#ff6000',\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}